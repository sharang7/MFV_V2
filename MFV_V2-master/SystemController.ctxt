#BlueJ class context
comment0.target=SystemController
comment0.text=\r\n\ a\ description\ of\ class\ SystemController\:\r\n\ It\ is\ the\ controller\ class\ that\ responsible\ of\ users\ processes\ \r\n\ It\ contains\ all\ the\ functions\ related\ to\ users\ such\ as\ edit\ profile\ and\ purchase\ a\ product\r\n\ @author\ (Shararng,\ Gauri,Najma,Hala)\r\n\ @version\ (3)\r\n
comment1.params=
comment1.target=SystemController()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ SystemController\r\n
comment10.params=index\ userName\ newValue
comment10.target=boolean\ updateUserData(int,\ java.lang.String,\ java.lang.String)
comment10.text=\r\n\ This\ method\ to\ update\ the\ changes\ of\ user's\ paaword\ \r\n\ @param\ user\ name,\ index\ of\ changing\ and\ the\ new\ value\r\n\ @return\ ture\ if\ the\ change\ happened\r\n
comment2.params=userName\ password\ email\ questions\ answers\ customerAddress\ disableProfile
comment2.target=boolean\ registerNewCustomer(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String[],\ java.lang.String[],\ java.lang.String,\ boolean)
comment2.text=\r\n\ This\ method\ gets\ details\ of\ a\ new\ customer\ from\ the\ boundary\ class\ and\ calls\ writeUserDataBase()\r\n\r\n\ @param\ \ user\ name,\ password,\ questions,\ answers,\ address\ and\ disable\ the\ profile\r\n\ @return\ \ \ \ the\ information\ of\ a\ customer\r\n
comment3.params=userName\ password
comment3.target=java.lang.String\ confirmationForLogin(java.lang.String,\ java.lang.String)
comment3.text=\r\n\ This\ method\ validates\ credentials\ entered\ by\ the\ user\ against\ those\ stored\ in\ MFV\ database.\r\n\ @param\ user\ name\ and\ the\ password\r\n\ @return\ the\ result\ of\ matching\ the\ password\ during\ the\ login\ process\r\n
comment4.params=userName
comment4.target=java.util.HashMap\ checkSecurityQuestions(java.lang.String)
comment5.params=index\ userName\ newValue
comment5.target=boolean\ editProfile(int,\ java.lang.String,\ java.lang.String)
comment5.text=\r\n\ This\ method\ allows\ users\ to\ edit\ their\ profile\r\n\ @param\ user\ name,\ index\ of\ changing\ and\ the\ new\ value\r\n\ @return\ true\ if\ the\ change\ happened\r\n
comment6.params=id
comment6.target=java.lang.String\ searchProduct(int)
comment6.text=\r\n\ \r\n\ @param\ \r\n\ @return\ \r\n
comment7.params=fileName
comment7.target=java.util.HashMap\ readUserDatabase(java.lang.String)
comment7.text=\r\n\ Method\ used\ to\ check\ if\ a\ user\ exists\ and\ is\ an\ active\ user\ of\ MFV.\r\n
comment8.params=userName
comment8.target=java.util.HashMap\ readSecurityQuestions(java.lang.String)
comment9.params=userName\ password\ email\ questions\ answers\ customerAddress\ disableProfile
comment9.target=boolean\ writeUserDatabase(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String[],\ java.lang.String[],\ java.lang.String,\ boolean)
comment9.text=\r\n\ This\ method\ to\ write\ all\ customers\ information\ to\ the\ file\ \r\n\ @param\ user\ name,\ password,email,\ questions,\ answers,\ customerAddress\ and\ if\ the\ profile\ is\ disable\r\n\ @return\ false\ if\ all\ the\ information\ are\ captured\r\n
numComments=11
